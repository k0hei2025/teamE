var mobilearray		= {98:10,222:10,39:10,220:9,13:9,189:8,129:9,221:8,173:8,114:8};
var phonearray		= {98:8,222:8,39:8,220:7,13:8,189:8,129:6,221:6};

function genNumbers() {
  var d=new Date();
  var rand_flag = "sr"+d.getSeconds()+"we";
  return rand_flag;
}
/*position find*/
function fillSelectFromArray(selectCtrl, itemArray, goodPrompt, badPrompt, defaultItem)
{
	var i;var optn = new Array();
	if (itemArray != null) {
		for (i = 0; i < itemArray.length; i++) {
			optn = itemArray.split("|");
			selectCtrl.options[i].text  = optn[0];
			selectCtrl.options[i].value = optn[1]; 
		}
		//selectCtrl.options[0].selected = true;
   }
}//fillSelectFromArray

function IsEmpty(obj, obj_type)
{
	if (obj_type == "text" || obj_type == "password" || obj_type == "textarea" || obj_type == "file")	{
		var objValue;
		objValue = obj.value.replace(/\s+$/,"");
		if (objValue.length == 0) {
			return true;
		} else {
			return false;
		}
	} else if (obj_type == "select" || obj_type == "select-one") {
		for (i=0; i < obj.length; i++) {
			if (obj.options[i].selected) 
				{
					if(obj.options[i].value==" ") 
					{return true;obj.focus();} else {return false;}
					
					if(obj.options[i].value == "0") 
					{
						if(obj.options[i].seletedIndex == "0") 
						{return true;obj.focus();}
					} else {return false;}
				}
			
		}
		return true;	
	} else if (obj_type == "radio" || obj_type == "checkbox") {
		if (!obj[0] && obj) {
			if (obj.checked) {
				return false;
			} else {
				return true;	
			}
		} else {
			for (i=0; i < obj.length; i++) {
				if (obj[i].checked) {
					return false;
				}
			}
			return true;
		}
	} else {
		return false;
	}
}

function CompareValue( NumStr, pattern )
{
	for( var Idx = 0; Idx < NumStr.length; Idx ++ )
	{
		 var Char = NumStr.charAt( Idx );
		 var Match = false;

		for( var Idx1 = 0; Idx1 < pattern.length; Idx1 ++)
		{
		 if( Char == pattern.charAt( Idx1 ) )
		 Match = true;
		}
		if ( !Match )
		return false;
 	}
   	return true;
}

function ValidateEmail(Email)
{
	var funRegExp	      = new RegExp("^[A-Za-z0-9][A-Za-z0-9_\\.\-]*\\@[a-zA-Z0-9]+\\.[a-zA-Z]+[\\.]?[a-zA-Z]*$");
	if (!Email.match(funRegExp)) { return false; }//if
	return true;
}

function ChkEmpty(obj,obj_type,spanname,msg)
{
	var msgt	= obj + obj_type + spanname + msg;
//alert(msgt);

	if (obj_type=="text" || obj_type=="password" || obj_type=="textarea" || obj_type=="file")
	{
		var objValue;
		objValue = obj.value.replace(/\s+$/,"");
		if (objValue.length == 0)
		{document.getElementById(spanname).innerHTML=msg;return true;} 
		else {document.getElementById(spanname).innerHTML=" ";return false;}
	} 
	
	if (obj_type == "select") 
	{
		if (obj.selectedIndex==0)
		{document.getElementById(spanname).innerHTML=msg;return true;} 
		else {document.getElementById(spanname).innerHTML="";return false;}
		return true;	
	} 
	
	if (obj_type == "radio" || obj_type == "checkbox") 
	{
		var objlength=obj.length
		var objcount=0;
		for (i=0;i<objlength;i++ )
		{
			if(obj[i].checked){objcount=1;break;}else{objcount=0;}
		}
		if(objcount==0)
		{document.getElementById(spanname).innerHTML=msg;}
		else{document.getElementById(spanname).innerHTML=" ";}
		
		return true;
	} 
	
		return false;
}

function ValidateNo( NumStr, String )
{
	for( var Idx = 0; Idx < NumStr.length; Idx ++ )
	{
		 var Char = NumStr.charAt( Idx );
		 var Match = false;

		for( var Idx1 = 0; Idx1 < String.length; Idx1 ++)
		{
		 if( Char == String.charAt( Idx1 ) )
		 Match = true;
		}

		if ( !Match )
		return false;
 	}
   	return true;
}

function replaceAlpha(strIn) {
	var strOut='';
	for(var i=0 ; i < strIn.length ; i++) {
		var cChar=strIn.charAt(i);
		if((cChar >= 'A' && cChar <= 'Z') || (cChar >= 'a' && cChar <= 'z') || (cChar >= '0' && cChar <= '9')) {
			strOut += cChar;
		} else {
			strOut += "_";
		}
	} return strOut;
}

function SplNameChar(txt){
	if(txt.length == 0)
		return false;
	for(var i = 0;i < txt.length;i++){
		if(txt.charAt(i) == '@' || txt.charAt(i) == '#' 
			|| txt.charAt(i) == '!' || txt.charAt(i) == '$' 
			|| txt.charAt(i) == '%' || txt.charAt(i) == '&' 
			|| txt.charAt(i) == '^' || txt.charAt(i) == '*'  
			|| txt.charAt(i) == '-' || txt.charAt(i) == '=' 
			|| txt.charAt(i) == '+' || txt.charAt(i) == '|' 
			|| txt.charAt(i) == '?' || txt.charAt(i) == '<' 
			|| txt.charAt(i) == '>' || txt.charAt(i) == '/' 
			|| txt.charAt(i) == '[' || txt.charAt(i) == ']' 
			|| txt.charAt(i) == '(' || txt.charAt(i) == ')' 
			|| txt.charAt(i) == '`' || txt.charAt(i) == "," 
			|| txt.charAt(i) == ":" || txt.charAt(i) == ";" 
			|| txt.charAt(i) == "{" 
			|| txt.charAt(i) == "}" || txt.charAt(i) == '"'
			|| txt.charAt(i) == '\\'|| txt.charAt(i) == "'" )
			return true;
	}
	return false;
}//SplNameChar

function nullchk(txt)
{
	if (txt == "" || txt == null)
	{ return true; }
		
	var i;
	for(i=0;i<txt.length;i++)
	{
		if (txt.charAt(i) != " ")
		return false
	}
	return true;
}//nullchk

function HasSpace(txt){		
	if(txt.length == 0)
		return false;
	for(var i = 0;i < txt.length;i++){
		if(txt.charAt(i) == " ")
			return true;
	}
	return false;
}//HasSpace

function getSelectedRadio(buttonGroup) {
   // returns the array number of the selected radio button or -1 if no button is selected
   if (buttonGroup[0]) { // if the button group is an array (one button is not an array)
      for (var i=0; i<buttonGroup.length; i++) {
         if (buttonGroup[i].checked) {
            return i
         }
      }
   } else {
      if (buttonGroup.checked) { return 0; } // if the one button is checked, return zero
   }
   // if we get to this point, no radio button is selected
   return -1;
} // Ends the "getSelectedRadio" function

function getSelectedRadioValue(buttonGroup) {
   // returns the value of the selected radio button or "" if no button is selected
   var i = getSelectedRadio(buttonGroup);
   if (i == -1) {
      return "";
   } else {
      if (buttonGroup[i]) { // Make sure the button group is an array (not just one button)
         return buttonGroup[i].value;
      } else { // The button group is just the one button, and it is checked
         return buttonGroup.value;
      }
   }
} // Ends the "getSelectedRadioValue" function

// function to check a specific element in specific array ,Returns false if it is not//
function checkValueInArray(arr,val) {
  var i;
  for (i=0; i < arr.length; i++) {
	if (arr[i] == val) {
	 return true;
	}
  }
  return false;
}

// function which allows user to enter only numbers and backspace key
function allowNumeric(e) {
   var charCode = (e.which) ? e.which : e.keyCode;
      if(((charCode >= 48) && (charCode <= 57)) || (charCode == 8) || (charCode == 9) ) {
          return true;
	  }
	  return false;
}

function phonecountChk(val,country,totlen,codearray) {
	if(!codearray[country])	{
		if(val.length>=totlen) {
			return true;
		}
	} else {
		if(val.length>=codearray[country]){
			return true;
		}
	}
	return false;
}
/*  To Add Script Edit Profile Purpose --- Auther Ramesh.P    */ 

/* To Add Multiselect Purpose  */

							/* Multi move options start */


							function showhideDiv(divId,toValue,toId)
							{
								
								if(toValue.length>0)
								{
									
									$('#'+toId).attr('disabled',false);
									$('#'+divId).show();
								}
								else
								{
									$('#'+toId).attr('disabled',true);
									$('#'+divId).hide();
									
								}
							}


							function moveOptions(theSelFrom, theSelTo) {           // Multi move option general function
								var selLength = theSelFrom.length;
								var selectedText = new Array();
								var selectedValues = new Array();
								var selectedCount = 0;
								var selId = theSelFrom.id;
								var i;	
								var fromValue=theSelFrom.value;
								
								if(fromValue!="")	
								{
								for(i=selLength-1; i>=0; i--) 
								{
									if(theSelFrom.options[i].selected){
										selectedText[selectedCount] = theSelFrom.options[i].text;
										selectedValues[selectedCount] = theSelFrom.options[i].value;
										deleteOption(theSelFrom, i);
										selectedCount++;
									}
								}
								for(i=selectedCount-1; i>=0; i--){ addOption(theSelTo, selectedText[i], selectedValues[i]);}
								}
							}
				function addOption(theSel, theText, theValue)			// add option from left to right dropdown list
							{
								var add_sel = 's';
								sellen	= theSel.length;
								for(i=0; i<sellen;i++){
									if(theSel.options[i].value == theValue){
									add_sel = 'n';
									}
								}

								if(add_sel=='s'){
								var newOpt = new Option(theText, theValue);
								var selLength = theSel.length;
								theSel.options[selLength] = newOpt;
								}

								sellen	= theSel.length;
								if(sellen > 0){
									for(i=0; i<(sellen-1);i++){
										theSel.options[i].selected=false;	
									}
									theSel.options[(sellen-1)].selected=true;
								}
							}

							function deleteOption(theSel, theIndex) {				// delete option from right to left dropdownlist
								var selLength = theSel.length;
								if(selLength>0) {		
									theSel.options[theIndex] = null;
								}
							}
							function selValues(theSel) {							//select all values of multimove option
								var selLength	= theSel.length;    
								for(ww=0; ww<selLength; ww++)
								{
									theSel.options[ww].selected = true;
								}
							}
							function GetAllValues(selobj) {							//Get all values of multimove option
								var myArray="";
								var numlen=selobj.options.length;
								for(var i=0; i<selobj.options.length; i++){
								myArray += selobj.options[i].value + "~";
								}
								myArray=myArray.substring(0,myArray.length-1);
								return myArray;
							}

							function fnAnyChk(frobj,toobj){
							  var selFrLength=frobj.length;
							  var selToLength=toobj.length;
							  var iAnyFound=0;

							  for(i=selToLength-1; i>=0; i--){
								  if(toobj.options[i].selected){
								  if(toobj.options[i].value==0) iAnyFound=1;
								  }
							  }
							  if(iAnyFound==1){
								 for(k=selToLength-1; k>=0; k--){
								  if(toobj.options[k].value!=0){
									addOption(frobj,toobj.options[k].text,toobj.options[k].value);
									toobj.options[k]=null;
								  }
								}
							  }else{
								 for(k=selToLength-1; k>=0; k--){
								   if(toobj.options[k].value==0){
									addOption(frobj,toobj.options[k].text,toobj.options[k].value);
									toobj.options[k]=null;
								  }
								}
							  }
							}
	 var familyInfo = new Array('spokenLanguages'); 
	function familyMultiSel() {
	for(w=0; w <familyInfo.length; w++) {
		selObj =getId(familyInfo[w]); 
		if(selObj != null){
			selValues(selObj);
		}
	}
}
/*  To Add Script Edit Profile Purpose End --- Auther Ramesh.P    */ 
// For MIMA-Log report 
function SendMIMAReportLog(LogData,LogType){
	//Node Js Calling
	var trackIp   = 'lt.communitymatrimony.com';
	var trackPort = '';
	$.ajax({
	   type: 'POST',
	   url: '//'+trackIp+':'+trackPort+'/'+LogType,
	   data: 'strdata='+LogData,
	   crossDomain:true,
	});
}